from pydantic import BaseModel
import os
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()

client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))


class AIDraftRequest(BaseModel):
    scenario: str
    language: str = "marathi"


def generate_hakkasod_from_scenario(data: AIDraftRequest) -> str:
    try:
        print("тЬЕ Received scenario:", data.scenario)

        prompt = f"""
        рддреБрдореНрд╣рд╛рд▓рд╛ рд╣рдХреНрдХрд╕реЛрдб (Hakkasod Patra) рддрдпрд╛рд░ рдХрд░рд╛рдпрдЪрд╛ рдЖрд╣реЗ. рдЦрд╛рд▓реА рджрд┐рд▓реЗрд▓реНрдпрд╛ рдорд╛рд╣рд┐рддреАрдЪреНрдпрд╛ рдЖрдзрд╛рд░реЗ, рдорд░рд╛рдареА рднрд╛рд╖реЗрдд рдПрдХ рдХрд╛рдпрджреЗрд╢реАрд░ рдЖрдгрд┐ рдпреЛрдЧреНрдп рд╣рдХреНрдХрд╕реЛрдб рдкрддреНрд░ рддрдпрд╛рд░ рдХрд░рд╛. рд╣рдХреНрдХрд╕реЛрдб рдкрддреНрд░рд╛рдд рдХреЛрдгрддреА рд╡реНрдпрдХреНрддреА рдХреЛрдгрд╛рд╕рд╛рдареА рдЖрдгрд┐ рдХреЛрдгрддреНрдпрд╛ рдХрд╛рд░рдгрд╛рд╕рд╛рдареА рд╣рдХреНрдХ рд╕реЛрдбрдд рдЖрд╣реЗ рд╣реЗ рд╕реНрдкрд╖реНрдЯрдкрдгреЗ рдирдореВрдж рдХрд░рд╛.:

        рдорд╛рд╣рд┐рддреА:
        {data.scenario}

        ЁЯУМ рдХреГрдкрдпрд╛ рдпреЛрдЧреНрдп рдХрд╛рдпрджреЗрд╢реАрд░ рднрд╛рд╖рд╛ рд╡рд╛рдкрд░рд╛. рд╡реНрдпрд╛рд╡рд╕рд╛рдпрд┐рдХ рд╕реНрд╡рд░реВрдкрд╛рдЪрд╛ рднрд╛рдЧ Partnership Deed рдкреНрд░рдорд╛рдгреЗ рдирд╕рд╛рд╡рд╛.
        """

        response = client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.4,
        )

        return response.choices[0].message.content.strip()
    except Exception as e:
        print("тЭМ Error during AI generation:", str(e))
        raise e
